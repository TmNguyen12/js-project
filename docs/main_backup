// const data = [30, 86, 168, 281, 303, 365];

// d3.select(".chart")
//   .selectAll("div")
//   .data(data)
//     .enter()
//     .append("div")
//     .style("width", function(d) { return d + "px"; })
//     .text(function(d) { return d; });

const svg = d3.select("svg"),
  margin = {top: 50, right: 30, bottom: 50, left: 100},
  width = +svg.attr("width") - margin.left - margin.right,
  height = +svg.attr("height") - margin.top - margin.bottom,
  g = svg.append("g")
  .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

const parseTime = d3.timeParse("%d-%b-%y");
const formatValue = d3.format(',.2f');
const formatCurrency = d => `$${formatValue(d)}`;

//set the Ranges
const x = d3.scaleTime().rangeRound([0, width]);
const y = d3.scaleLinear().rangeRound([height, 0]);

// Define the line
var line = d3.line()
  .x(function(d) { return x(d.date); })
  .y(function(d) { return y(d.price); });

// Retrieve Data
d3.tsv("../docs/BTC_USD_short.csv", function(d) {
  d.date = parseTime(d.Date);
  d.price = +d.Price;
  return d;
}, function(error, data) {
  if (error) throw error;

// Scale the range of the data
x.domain(d3.extent(data, function(d) { return d.date; }));
y.domain(d3.extent(data, function(d) { return d.price; }));

// x axis 
g.append("g")
  .attr("transform", "translate(0," + height + ")")
  .call(d3.axisBottom(x).ticks(30, "%b-%y"))
  .selectAll("text")
    .attr("y", 0)
    .attr("x", 10)
    .attr("dy", ".35em")
    .attr("transform", "rotate(90)")
    .style("text-anchor", "start"); 

// y axis 
g.append("g")
    .call(d3.axisLeft(y).ticks(20))
  .append("text")
    .attr("fill", "#000")
    .attr("transform", "rotate(-90)")
    .attr("y", 7)
    .attr("dy", "0.8em")
    .attr("text-anchor", "end")
    .text("Price ($)");

g.append("path")                  // Add the valueline path 
  .datum(data)
  .attr("stroke-linejoin", "round")
  .attr("stroke-linecap", "round")
  .attr("d", line);








  // code block test 



// svg.selectAll("dot")
// .data(data)
// .enter().append("circle")
// .attr("r", 5)
// .attr("cx", function(d) { return x(d.date); })
// .attr("cy", function(d) { return y(d.price); })
// .on("mouseover", function(d) {
//   div.transition()
//     .duration(200)
//     .style("opacity", .9);
//   div.html(formatTime(d.date) + "<br/>" + d.price)
//     .style("left", (d3.event.pageX) + "px")
//     .style("top", (d3.event.pageY - 28) + "px");
//   })
// .on("mouseout", function(d) {
//   div.transition()
//     .duration(500)
//     .style("opacity", 0);
//   });

// from Micah Stubb's Block 

  // svg.append('path')
  //   .datum(data)
  //   .attr('class', 'line')
  //   .attr('d', line);

  // const focus = g.append('g')
  //   .attr('class', 'focus')
  //   .style('display', 'none');

  // focus.append('circle')
  //   .attr('r', 4.5);

  // focus.append('line')
  //   .classed('x', true);

  // focus.append('line')
  //   .classed('y', true);

  // focus.append('text')
  //   .attr('x', 9)
  //   .attr('dy', '.35em');

  // svg.append('rect')
  //   .attr('class', 'overlay')
  //   .attr('width', width)
  //   .attr('height', height)
  //   .on('mouseover', () => focus.style('display', null))
  //   .on('mouseout', () => focus.style('display', 'none'))
    // .on('mousemove', mousemove);

  // const bisectDate = d3.bisector(d => d.date).left;
  const bisectDate = d3.bisector( d => new Date(d.date)).left 

  // function mousemove() {
  //   const x0 = x.invert(d3.mouse(this)[0]);
  //   const i = bisectDate(data, x0, 1);
  //   const d0 = data[i - 2];
  //   const d1 = data[i-1];
  //   const d = x0 - d0.date > d1.date - x0 ? d1 : d0;
  //   focus.attr('transform', `translate(${x(new Date(d.date))}, ${y(d.price)})`);
  //   focus.select('line.x')
  //     .attr('x1', 0)
  //     .attr('x2', -x(d.date))
  //     .attr('y1', 0)
  //     .attr('y2', 0);

  //   focus.select('line.y')
  //     .attr('x1', 0)
  //     .attr('x2', 0)
  //     .attr('y1', 0)
  //     .attr('y2', height - y(d.price));

  //   focus.select('text').text(formatCurrency(d.price));
  // }

}); 